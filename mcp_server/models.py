# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T11:27:56+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, List, Optional
from uuid import UUID

from pydantic import AnyUrl, BaseModel, Field, RootModel, constr


class Status(Enum):
    pending = 'pending'
    uploaded = 'uploaded'
    received = 'received'
    processing = 'processing'
    success = 'success'
    vbms = 'vbms'
    error = 'error'


class DocumentUploadAttributes(BaseModel):
    code: Optional[str] = Field(
        None,
        description='Unambiguous status code. Only present if status = "error"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n',
    )
    detail: Optional[str] = Field(
        None,
        description='Human readable error detail. Only present if status = "error"',
    )
    guid: UUID = Field(
        ...,
        description='The document upload identifier',
        examples=['6d8433c1-cd55-4c24-affd-f592287a7572'],
    )
    location: Optional[AnyUrl] = Field(
        None,
        description='Location to which to PUT document Payload',
        examples=[
            'https://sandbox-api.va.gov/services_user_content/vba_documents/{idpath}'
        ],
    )
    status: Status = Field(
        ..., description='Document upload status.\n', examples=['pending']
    )
    updated_at: Optional[datetime] = Field(
        None,
        description='The last time the submission was updated',
        examples=['2018-07-30T17:31:15.958Z'],
    )
    uploaded_pdf: Optional[Any] = Field(
        None,
        description='Only populated after submission starts processing',
        examples=['null'],
    )


class DocumentUploadFailure(BaseModel):
    Code: Optional[str] = Field(
        None, description='Error code', examples=['SignatureDoesNotMatch']
    )
    Message: Optional[str] = Field(
        None,
        description='Error detail',
        examples=[
            'The request signature we calculated does not match the signature you provided. Check your key and signing method.'
        ],
    )


class BusinessLine(Enum):
    CMP = 'CMP'
    PMC = 'PMC'
    INS = 'INS'
    EDU = 'EDU'
    VRE = 'VRE'
    BVA = 'BVA'
    FID = 'FID'
    OTH = 'OTH'


class DocumentUploadMetadata(BaseModel):
    businessLine: Optional[BusinessLine] = Field(
        None,
        description='Optional parameter (can be missing or empty). The values are:<br><br>\nCMP - Compensation requests such as those related to disability, unemployment, and pandemic claims<br><br>\nPMC - Pension requests including survivorâ€™s pension<br><br>\nINS - Insurance such as life insurance, disability insurance, and other health insurance<br><br>\nEDU - Education benefits, programs, and affiliations<br><br>\nVRE - Veteran Readiness & Employment such as employment questionnaires, employment discrimination, employment verification<br><br>\nBVA - Board of Veteran Appeals<br><br>\nFID - Fiduciary / financial appointee, including family member benefits<br><br>\nOTH - Other (this value if used, will be treated as CMP)<br>\n',
        examples=['CMP'],
    )
    docType: Optional[str] = Field(
        None, description='VBA form number of the document', examples=['21-22']
    )
    fileNumber: constr(pattern=r'^\d{8,9}$') = Field(
        ...,
        description="The Veteran's file number is exactly 9 digits with no alpha characters, hyphens, spaces or punctuation. In most cases, this is the Veteran's SSN but may also be an 8 digit BIRL number. If no file number has been established or if it is unknown, the application should use the Veteran's SSN and the file number will be associated with the submission later in the process. Incorrect file numbers can cause delays.",
        examples=['999887777'],
    )
    source: str = Field(
        ...,
        description='System, installation, or entity submitting the document',
        examples=['MyVSO'],
    )
    veteranFirstName: constr(pattern=r'^[a-zA-Z\-\/\s]{1,50}$') = Field(
        ...,
        description='Veteran first name. Cannot be missing or empty or longer than 50 characters. Only upper/lower case letters, hyphens(-), spaces and forward-slash(/) allowed.',
        examples=['Jane'],
    )
    veteranLastName: constr(pattern=r'^[a-zA-Z\-\/\s]{1,50}$') = Field(
        ...,
        description='Veteran last name. Cannot be missing or empty or longer than 50 characters. Only upper/lower case letters, hyphens(-), spaces and forward-slash(/) allowed.',
        examples=['Doe-Smith'],
    )
    zipCode: str = Field(
        ...,
        description="Veteran zip code. Either five digits (XXXXX) or five digits then four digits separated by a hyphen (XXXXX-XXXX). Use '00000' for Veterans with non-US addresses.",
        examples=['20571'],
    )


class DocumentUploadPath(BaseModel):
    attributes: DocumentUploadAttributes
    id: UUID = Field(
        ...,
        description='JSON API identifier',
        examples=['6d8433c1-cd55-4c24-affd-f592287a7572'],
    )
    type: str = Field(
        ..., description='JSON API type specification', examples=['document_upload']
    )


class DocumentUploadStatusGuidList(BaseModel):
    ids: List[UUID] = Field(
        ...,
        description='List of IDs for previous document upload submissions',
        max_length=1000,
        min_length=1,
    )


class DocumentValidationErrorModel(BaseModel):
    detail: str = Field(
        ...,
        description='Error detail\n\nPossible values:\n* Document was not provided\n* Document is not a PDF\n* Document exceeds the file size limit of 100 MB\n* Document exceeds the page size limit of 21 in. x 21 in.\n* Document is locked with a user password\n* Document is not a valid PDF\n',
        examples=['Document is locked with a user password'],
    )
    status: str = Field(..., description='HTTP error code', examples=['422'])
    title: str = Field(
        ..., description='Error title', examples=['Document failed validation']
    )


class ErrorModel(BaseModel):
    detail: str = Field(
        ...,
        description='A more detailed message about why an error occurred',
        examples=[
            'DOC104 - Upload rejected by upstream system. Processing failed and upload must be resubmitted'
        ],
    )
    status: int = Field(
        ..., description='Standard HTTP Status returned with Error', examples=['422']
    )


class PdfDimensionAttributes(BaseModel):
    height: int = Field(..., description='The document height', examples=['11.0'])
    oversized_pdf: bool = Field(
        ...,
        description='Indicates if this is an oversized PDF (greater than 21x21)',
        examples=['false'],
    )
    width: int = Field(..., description='The document width', examples=['8.5'])


class Attachment(BaseModel):
    dimensions: Optional[PdfDimensionAttributes] = None
    page_count: Optional[int] = Field(
        None, description='The number of pages in this attachment', examples=['2']
    )


class Content(BaseModel):
    attachments: Optional[List[Attachment]] = None
    dimensions: Optional[PdfDimensionAttributes] = None
    page_count: Optional[int] = Field(
        None,
        description='The total number of pages solely in this PDF document',
        examples=['1'],
    )


class PdfUploadAttributes(BaseModel):
    content: Content
    total_documents: int = Field(
        ...,
        description='The total number of documents contained in this upload',
        examples=['2'],
    )
    total_pages: int = Field(
        ...,
        description='The total number of pages contained in this upload',
        examples=['3'],
    )


class PathPutResponse(BaseModel):
    Message: Optional[str] = Field(
        None, description='Error detail', examples=['Unauthorized Request']
    )


class PathPutResponse1(BaseModel):
    errors: List[ErrorModel]


class PathPutResponse2(BaseModel):
    Message: Optional[str] = Field(
        None, description='message', examples=['API rate limit exceeded']
    )


class PathPutResponse3(BaseModel):
    code: Optional[str] = Field(
        None,
        description='Unambiguous status code. Only present if status = "error"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n',
        examples=[500],
    )
    detail: Optional[str] = Field(
        None,
        description='Human readable error detail. Only present if status = "error"',
        examples=['Internal server error'],
    )
    status: Optional[str] = Field(
        None,
        description='Unambiguous status code. Only present if status = "error"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n',
        examples=[500],
    )
    title: Optional[str] = Field(
        None,
        description='Human readable title description.',
        examples=['Internal server error'],
    )


class UploadsPostResponse(BaseModel):
    data: DocumentUploadPath


class UploadsPostResponse1(BaseModel):
    Message: Optional[str] = Field(
        None, description='Error detail', examples=['Unauthorized Request']
    )


class UploadsPostResponse2(BaseModel):
    Message: Optional[str] = Field(
        None,
        description='Error detail',
        examples=['Invalid authentication credentials'],
    )


class UploadsPostResponse3(BaseModel):
    errors: List[ErrorModel]


class UploadsPostResponse4(BaseModel):
    Message: Optional[str] = Field(
        None, description='message', examples=['API rate limit exceeded']
    )


class UploadsPostResponse5(BaseModel):
    code: Optional[str] = Field(
        None,
        description='Unambiguous status code. Only present if status = "error"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n',
        examples=[500],
    )
    detail: Optional[str] = Field(
        None,
        description='Human readable error detail. Only present if status = "error"',
        examples=['Internal server error'],
    )
    status: Optional[str] = Field(
        None,
        description='Unambiguous status code. Only present if status = "error"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n',
        examples=[500],
    )
    title: Optional[str] = Field(
        None,
        description='Human readable title description.',
        examples=['Internal server error'],
    )


class UploadsReportPostResponse1(BaseModel):
    Message: Optional[str] = Field(
        None, description='Error detail', examples=['Unauthorized Request']
    )


class UploadsReportPostResponse2(BaseModel):
    Message: Optional[str] = Field(
        None,
        description='Error detail',
        examples=['Invalid authentication credentials'],
    )


class UploadsReportPostResponse3(BaseModel):
    errors: List[ErrorModel]


class UploadsReportPostResponse4(BaseModel):
    Message: Optional[str] = Field(
        None, description='message', examples=['API rate limit exceeded']
    )


class UploadsReportPostResponse5(BaseModel):
    code: Optional[str] = Field(
        None,
        description='Unambiguous status code. Only present if status = "error"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n',
        examples=[500],
    )
    detail: Optional[str] = Field(
        None,
        description='Human readable error detail. Only present if status = "error"',
        examples=['Internal server error'],
    )
    status: Optional[str] = Field(
        None,
        description='Unambiguous status code. Only present if status = "error"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n',
        examples=[500],
    )
    title: Optional[str] = Field(
        None,
        description='Human readable title description.',
        examples=['Internal server error'],
    )


class Attributes(BaseModel):
    status: Optional[str] = Field(None, examples=['valid'])


class Data(BaseModel):
    attributes: Optional[Attributes] = None
    type: Optional[str] = Field(
        None, description='schema type', examples=['documentValidation']
    )


class UploadsValidateDocumentPostResponse(BaseModel):
    data: Optional[Data] = None


class UploadsValidateDocumentPostResponse1(BaseModel):
    Message: Optional[str] = Field(
        None, description='Error detail', examples=['Unauthorized Request']
    )


class UploadsValidateDocumentPostResponse2(BaseModel):
    Message: Optional[str] = Field(
        None,
        description='Error detail',
        examples=['Invalid authentication credentials'],
    )


class UploadsValidateDocumentPostResponse3(BaseModel):
    errors: List[DocumentValidationErrorModel]


class UploadsValidateDocumentPostResponse4(BaseModel):
    Message: Optional[str] = Field(
        None, description='message', examples=['API rate limit exceeded']
    )


class UploadsValidateDocumentPostResponse5(BaseModel):
    code: Optional[str] = Field(
        None,
        description='Unambiguous status code. Only present if status = "error"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n',
        examples=[500],
    )
    detail: Optional[str] = Field(
        None,
        description='Human readable error detail. Only present if status = "error"',
        examples=['Internal server error'],
    )
    status: Optional[str] = Field(
        None,
        description='Unambiguous status code. Only present if status = "error"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n',
        examples=[500],
    )
    title: Optional[str] = Field(
        None,
        description='Human readable title description.',
        examples=['Internal server error'],
    )


class UploadsIdGetResponse1(BaseModel):
    Message: Optional[str] = Field(
        None, description='Error detail', examples=['Unauthorized Request']
    )


class UploadsIdGetResponse2(BaseModel):
    Message: Optional[str] = Field(
        None,
        description='Error detail',
        examples=['Invalid authentication credentials'],
    )


class UploadsIdGetResponse3(BaseModel):
    code: Optional[str] = Field(
        None,
        description='Unambiguous status code. Only present if status = "error"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n',
        examples=[404],
    )
    detail: Optional[str] = Field(
        None,
        description='Human readable error detail. Only present if status = "error"',
        examples=['The record identified by {{id}} could not be found'],
    )
    status: Optional[str] = Field(
        None,
        description='Unambiguous status code. Only present if status = "error"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n',
        examples=[404],
    )
    title: Optional[str] = Field(
        None,
        description='Human readable title description.',
        examples=['Record not found'],
    )


class UploadsIdGetResponse4(BaseModel):
    Message: Optional[str] = Field(
        None, description='message', examples=['API rate limit exceeded']
    )


class UploadsIdGetResponse5(BaseModel):
    code: Optional[str] = Field(
        None,
        description='Unambiguous status code. Only present if status = "error"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n',
        examples=[500],
    )
    detail: Optional[str] = Field(
        None,
        description='Human readable error detail. Only present if status = "error"',
        examples=['Internal server error'],
    )
    status: Optional[str] = Field(
        None,
        description='Unambiguous status code. Only present if status = "error"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n',
        examples=[500],
    )
    title: Optional[str] = Field(
        None,
        description='Human readable title description.',
        examples=['Internal server error'],
    )


class UploadsIdDownloadGetResponse(BaseModel):
    Message: Optional[str] = Field(
        None, description='Error detail', examples=['Unauthorized Request']
    )


class UploadsIdDownloadGetResponse1(BaseModel):
    Message: Optional[str] = Field(
        None,
        description='Error detail',
        examples=['Invalid authentication credentials'],
    )


class UploadsIdDownloadGetResponse2(BaseModel):
    code: Optional[str] = Field(
        None,
        description='Unambiguous status code. Only present if status = "error"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n',
        examples=[404],
    )
    detail: Optional[str] = Field(
        None,
        description='Human readable error detail. Only present if status = "error"',
        examples=['The record identified by {{id}} could not be found'],
    )
    status: Optional[str] = Field(
        None,
        description='Unambiguous status code. Only present if status = "error"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n',
        examples=[404],
    )
    title: Optional[str] = Field(
        None,
        description='Human readable title description.',
        examples=['Record not found'],
    )


class UploadsIdDownloadGetResponse3(BaseModel):
    Message: Optional[str] = Field(
        None, description='message', examples=['API rate limit exceeded']
    )


class UploadsIdDownloadGetResponse4(BaseModel):
    code: Optional[str] = Field(
        None,
        description='Unambiguous status code. Only present if status = "error"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n',
        examples=[500],
    )
    detail: Optional[str] = Field(
        None,
        description='Human readable error detail. Only present if status = "error"',
        examples=['Internal server error'],
    )
    status: Optional[str] = Field(
        None,
        description='Unambiguous status code. Only present if status = "error"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n',
        examples=[500],
    )
    title: Optional[str] = Field(
        None,
        description='Human readable title description.',
        examples=['Internal server error'],
    )


class DocumentUploadStatusAttributes(BaseModel):
    code: Optional[str] = Field(
        None,
        description='Unambiguous status code. Only present if status = "error"\n\n* `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.\n* `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.\n* `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.\n* `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.\n* `DOC105` - Invalid or unknown id\n* `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.\n* `DOC107` - Empty payload.\n* `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.\n* `DOC201` - Upload server error.\n* `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.\n',
    )
    detail: Optional[str] = Field(
        None,
        description='Human readable error detail. Only present if status = "error"',
    )
    guid: UUID = Field(
        ...,
        description='The document upload identifier',
        examples=['6d8433c1-cd55-4c24-affd-f592287a7572'],
    )
    message: Optional[str] = Field(
        None,
        description='Human readable error description. Only present if status = "error"',
    )
    status: Status = Field(
        ..., description='Document upload status.\n', examples=['received']
    )
    updated_at: Optional[datetime] = Field(
        None,
        description='The last time the submission was updated',
        examples=['2018-07-30T17:31:15.958Z'],
    )
    uploaded_pdf: Optional[PdfUploadAttributes] = None


DocumentUploadSubmissionAttributes = DocumentUploadStatusAttributes


class DocumentUploadStatus(BaseModel):
    attributes: DocumentUploadStatusAttributes
    id: UUID = Field(
        ...,
        description='JSON API identifier',
        examples=['6d8433c1-cd55-4c24-affd-f592287a7572'],
    )
    type: str = Field(
        ..., description='JSON API type specification', examples=['document_upload']
    )


class DocumentUploadStatusReport(RootModel[List[DocumentUploadStatus]]):
    root: List[DocumentUploadStatus]


class DocumentUploadSubmission(BaseModel):
    attributes: DocumentUploadSubmissionAttributes
    id: UUID = Field(
        ...,
        description='JSON API Identifier',
        examples=['6d8433c1-cd55-4c24-affd-f592287a7572'],
    )
    type: str = Field(
        ..., description='JSON API type specification', examples=['document_upload']
    )


class UploadsReportPostResponse(BaseModel):
    data: DocumentUploadStatusReport


class UploadsIdGetResponse(BaseModel):
    data: DocumentUploadStatus
